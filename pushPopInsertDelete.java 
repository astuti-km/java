class LinkedList {
    Node head;

    
    class Node {
        int data;
        Node next;

        Node(int d) {
            data = d;
            next = null;
        }
    }

   
    void push(int new_data) {
        Node new_node = new Node(new_data);
        new_node.next = head;
        head = new_node;
        System.out.println(new_data + " pushed to the list");
    }

   
    void pop() {
        if (head == null) {
            System.out.println("List is empty! Nothing to pop.");
            return;
        }
        System.out.println(head.data + " popped from the list");
        head = head.next;
    }

  
    void insert(int new_data) {
        Node new_node = new Node(new_data);

        if (head == null) {
            head = new_node;
            System.out.println(new_data + " inserted as the first element");
            return;
        }

        Node temp = head;
        while (temp.next != null)
            temp = temp.next;

        temp.next = new_node;
        System.out.println(new_data + " inserted at the end");
    }

    
    void delete(int key) {
        Node temp = head, prev = null;

        
        if (temp != null && temp.data == key) {
            head = temp.next;
            System.out.println(key + " deleted from the list");
            return;
        }

      
        while (temp != null && temp.data != key) {
            prev = temp;
            temp = temp.next;
        }

        
        if (temp == null) {
            System.out.println(key + " not found in the list");
            return;
        }

        prev.next = temp.next;
        System.out.println(key + " deleted from the list");
    }

    
    void search(int key) {
        Node temp = head;
        while (temp != null) {
            if (temp.data == key) {
                System.out.println(key + " found in the list!");
                return;
            }
            temp = temp.next;
        }
        System.out.println(key + " not found in the list.");
    }

    
    void display() {
        Node temp = head;
        System.out.print("Linked List: ");
        while (temp != null) {
            System.out.print(temp.data + " -> ");
            temp = temp.next;
        }
        System.out.println("NULL");
    }

    public static void main(String[] args) {
        LinkedList list = new LinkedList();

        list.push(10);
        list.push(20);
        list.insert(30);
        list.insert(40);
        list.display();

        list.search(30);
        list.delete(20);
        list.display();

        list.pop();
        list.display();
    }
}